buildscript {
	ext {
		springBootVersion = '2.0.5.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'org.radarcns'
version = '1.0.0'
sourceCompatibility = 1.8

repositories {
	jcenter()
	mavenCentral()

	maven { url 'https://oss.jfrog.org/artifactory/libs-snapshot/' }
	maven { url 'https://dl.bintray.com/radar-cns/org.radarcns' }
}

ext {
	githubRepoName = 'RADAR-base/RADAR-Rest-Source-Auth'
	githubUrl = 'https://github.com/' + githubRepoName + '.git'
	issueUrl = 'https://github.com/' + githubRepoName + '/issues'
	website = 'http://radar-base.org'
	description = 'RADAR Rest Source Authorizer handles authorization for data access from third party APIs for wearable devices or other connected sources.'

	okhttp3Version = '3.11.0'
	mapstructVersion = '1.3.0.Beta1'
}

dependencies {
	compileOnly('org.projectlombok:lombok:1.18.6')
	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
	implementation('org.springframework.boot:spring-boot-starter')
	implementation('org.springframework.boot:spring-boot-starter-data-jpa')
	implementation('org.springframework.boot:spring-boot-starter-jersey')
	implementation('org.springframework.boot:spring-boot-starter-validation')
	implementation('org.springframework.boot:spring-boot-starter-web')
	compile "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml"
	compile('com.fasterxml.jackson.datatype:jackson-datatype-jsr310')
	implementation('org.liquibase:liquibase-core')
	implementation('org.springframework.session:spring-session-core')
	implementation group: 'com.squareup.okhttp3', name: 'okhttp', version: okhttp3Version
	runtimeOnly('org.postgresql:postgresql')
	testImplementation('org.springframework.boot:spring-boot-starter-test')
}

springBoot {
	mainClassName = 'org.radarbase.authorizer.RadarRestSourceAuthorizerApplication'
}

wrapper {
	gradleVersion '4.10.2'
}

task downloadDependencies {
	description "Pre-downloads dependencies"
	configurations.compileClasspath.files
	configurations.runtimeClasspath.files
}
